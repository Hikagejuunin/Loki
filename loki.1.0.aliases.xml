<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Loki 1.0 aliases</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>general</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>[ ds ] dstab</name>
					<script>local venoms = {
a = "aconite",
b = "oculus",
c = "curare",
d = "delphinium",
e = "eurypteria",
f = "epteth",
g = "gecko",
i = "digitalis",
k = "kalmia",
l = "larkspur",
m = "monkshood",
n = "selarnia",
o = "voyria",
p = "prefarar",
q = "epseth",
r = "darkshade",
s = "slike",
u = "euphorbia",
v = "vernalius",
x = "xentio",
z = "vardrax",
}

vleft = venoms[matches[2]]
vright = venoms[matches[3]] or vleft

--MESMER HYPNOSIS
function mesmer_push()
  if no_hyp == true then
  elseif mesmer.status == "none" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "in progress" then
  elseif mesmer.status == "hypnotised" then
    mesmer.suggest()
  elseif mesmer.status == "snapped" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "sealed" then
  end
end

--PREFIX
local function prefix()
  local pref = {"stand","purge"}
  pf = table.concat(pref, "/")
  return pf
end

--MAIN
if not vleft then
  ak.scoreup()
  ak.serpent.Lockstack.main()
  send("queue addclear eqbal oattack")
  return
end 

if ak.defs.shield and auto_flay then
  sendAll("cq all","setalias qfls "..prefix().."/wield "..myWhip.." "..myShield.."/flay "..target.." shield "..vleft,"queue add eqbal qfls")
  cecho("&lt;orange&gt;[FLAY]: flaying &lt;red&gt;"..target.."&lt;orange&gt;'s &lt;cyan&gt;shield&lt;orange&gt; with: [&lt;yellow&gt;"..vleft.."&lt;orange&gt;]")
elseif ak.defs.rebounding and auto_flay then
  sendAll("cq all","setalias qfls "..prefix().."/wield "..myWhip.." "..myShield.."/flay "..target.." rebounding "..vleft,"queue add eqbal qfls")
  cecho("&lt;orange&gt;[FLAY]: flaying &lt;red&gt;"..target.."&lt;orange&gt;'s &lt;cyan&gt;rebounding&lt;orange&gt; with: [&lt;yellow&gt;"..vleft.."&lt;orange&gt;]")
else 
  sendAll("cq all","setalias qstab "..prefix().."/wield "..myDirk.." "..myShield.."/wipe dirk/dstab "..target.." "..vleft.." "..vright,"queue add eqbal qstab")
  cecho("&lt;orange&gt;[DSTAB]: afflicting &lt;red&gt;"..target.."&lt;orange&gt; with: [&lt;yellow&gt;"..vleft.."&lt;orange&gt;, &lt;yellow&gt;"..vright.."&lt;orange&gt;]")
end

mesmer_push()
</script>
					<command></command>
					<packageName></packageName>
					<regex>^ds([a-z]?)([a-z]?)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ bs ] bite</name>
					<script>local venoms = {
a = "aconite",
b = "oculus",
c = "camus",
d = "delphinium",
e = "eurypteria",
f = "epteth",
g = "gecko",
i = "digitalis",
k = "kalmia",
l = "loki",
m = "nechamandra",
n = "notechis",
o = "voyria",
p = "prefarar",
q = "epseth",
r = "darkshade",
s = "scytherus",
u = "euphorbia",
v = "vernalius",
x = "xentio",
y = "oculus",
z = "vardrax",
}

local vbite = venoms[matches[2]]

--MESMER HYPNOSIS
function mesmer_push()
  if no_hyp == true then
  elseif mesmer.status == "none" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "in progress" then
  elseif mesmer.status == "hypnotised" then
    mesmer.suggest()
  elseif mesmer.status == "snapped" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "sealed" then
  end
end

--PREFIX
local function prefix()
  local pref = {"stand","purge"}
  pf = table.concat(pref, "/")
  return pf
end

if not vbite then
  ak.scoreup()
  ak.serpent.Bitestack.main()
  send("queue addclear eqbal battack")
  return
else
  mesmer_push()
end

if ak.defs.sileris then
  sendAll("cq all","setalias qflg "..prefix().."/wield "..myWhip.." "..myShield.."/purge/flay "..target.." rebounding gecko/purge","queue add eqbal qflg")
  ak.defs.sileris = false
  cecho("&lt;orange&gt;[FLAY]: flaying &lt;red&gt;"..target.."&lt;orange&gt;'s &lt;purple&gt;sileris&lt;orange&gt; with: [&lt;yellow&gt;gecko&lt;orange&gt;]")
else
  if auto_illusion then
    sendAll("cq all","setalias qbite "..prefix().."/bite "..target.." "..vbite.."/purge","queue add eqbal qbite")
    cecho("&lt;orange&gt;[BITE]: afflicting &lt;red&gt;"..target.." &lt;orange&gt;with: [&lt;yellow&gt;"..vbite.."&lt;orange&gt;]")
  else
    sendAll("cq all","setalias qbite "..prefix().."/bite "..target.." "..vbite.."/purge","queue add eqbal qbite")  
    cecho("&lt;orange&gt;[BITE]: afflicting &lt;red&gt;"..target.." &lt;orange&gt;with: [&lt;yellow&gt;"..vbite.."&lt;orange&gt;]")
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^bs([a-z]?)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ ps ] pinshot</name>
					<script>local t = string.trim(matches[2])

local exits = table.keys(gmcp.Room.Info.exits)
local lightwalldir = exits[math.random(#exits)]

--LIGHTWALL
local function isLightWall()
  for id, item in pairs(api.room.items) do
    if item.name == "a lightwall" then return true end
  end
end

--BETTER RANDOM
local function betterRand()
    randomtable = {}
    for i = 1, 97 do
        randomtable[i] = math.random()
    end
    local x = math.random()
    local i = 1 + math.floor(97*x)
    x, randomtable[i] = randomtable[i], x
    return x
end

--MESMER HYPNOSIS
function mesmer_push()
  if no_hyp == true then
  elseif mesmer.status == "none" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "in progress" then
  elseif mesmer.status == "hypnotised" then
    mesmer.suggest()
  elseif mesmer.status == "snapped" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "sealed" then
  end
end


--PREFIX
local function prefix()
  local pref = {"stand","purge"}
  pf = table.concat(pref, "/")
  return pf
end

if t ~= nil then
  if isLightWall() then
    sendAll("cq all","setalias qpshot "..prefix().."/remove "..myBow.."/wield "..myBow.."/pinshot "..t,"queue add eqbal qpshot")
  else
    sendAll("cq all","setalias qpshot "..prefix().."/remove "..myBow.."/wield "..myBow.."/pinshot "..t.."/conjure lightwall "..lightwalldir,"queue add eqbal qpshot")
  end
elseif PinshotTimer then
  ak.serpent.Lockstack.main()
  send("queue addclear eqbal oattack")
  cecho("&lt;orange&gt;\n[PINSHOT]: &lt;yellow&gt;pinshot still active on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;"..remainingTime(PinshotTimer).." seconds...\n")
  return
elseif isLightWall() then
  mesmer_push()
  sendAll("cq all","setalias qpshot "..prefix().."/remove "..myBow.."/wield "..myBow.."/pinshot "..target,"queue add eqbal qpshot")
else
  mesmer_push()
  sendAll("cq all","setalias qpshot "..prefix().."/remove "..myBow.."/wield "..myBow.."/pinshot "..target.."/conjure lightwall "..lightwalldir,"queue add eqbal qpshot")
end


</script>
					<command></command>
					<packageName></packageName>
					<regex>^ps( \w+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ tar ] set target</name>
					<script>target = matches[2]
send("SETTARGET " ..target)
target = target:title()
ak.oresetparse()
cecho("&lt;light_slate_blue&gt;Your target is now: &lt;red&gt;"..target.."\n")
mesmer.reset()
cecho("&lt;light_slate_blue&gt;Mesmer reset: &lt;red&gt;"..target.."\n")

if PartyLeader then
  send("pt Target: "..target)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ tr ] target reset</name>
					<script>ak.oresetparse()
cecho("&lt;light_slate_blue&gt;Target reset: &lt;red&gt;"..target.."\n")

if (mesmer.status == "none" or mesmer.status == "snapped" or mesmer.status == nil) then
  mesmer.reset()
  cecho("&lt;light_slate_blue&gt;Mesmer reset: &lt;red&gt;"..target.."\n")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^tr$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ cl ] conjure lightwall</name>
					<script>local exits = table.keys(gmcp.Room.Info.exits)
local lightwalldir = exits[math.random(#exits)]
send("conjure lightwall "..lightwalldir)</script>
					<command></command>
					<packageName></packageName>
					<regex>^cl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ sn ] snipe</name>
					<script>local aim_dir = string.trim(matches[2])

if aim_dir ~= nil then
  cecho(aim_dir)
  send("aim "..target.." "..aim_dir)
  tempTrigger("You feel confident that your aim is accurate.", [[ sendAll("cq all","setalias qasnipe stand/remove "..myBow.."/wield "..myBow.."/snipe "..target,"queue add eqbal qasnipe") ]], 1)
else
  sendAll("cq all","setalias qsnipe stand/remove "..myBow.."/wield "..myBow.."/snipe "..target,"queue add eqbal qsnipe")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^sn( \w+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ sm ] shoot meteor</name>
					<script>sendAll("cq all","setalias qmet stand/remove "..myBow.."/wield "..myBow.."/shoot "..target.." with meteor","queue add eqbal qmet")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^sm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ sv ] summon viper</name>
					<script>send("summon "..myCitySnake)</script>
					<command></command>
					<packageName></packageName>
					<regex>^sv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ st ] snap target</name>
					<script>send("snap "..target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^st$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ qh ] queue hypnosis</name>
					<script>--[[mesmer.ref.shortsRev =
  {
    impatience = "imp",   clumsiness = "clu",   claustrophobia = "cla",
    amnesia = "amn",      addiction = "add",    paranoia = "par",
    loneliness = "lon",   stuttering = "stt",   hallucinations = "hal",
    pacifism = "pac",     hypersomnia = "hpr",  dementia = "dem",
    deadening = "dea",    epilepsy = "epi",     agoraphobia = "ago",
    masochism = "mas",    recklessness = "rec", vertigo = "ver",
    lethargy = "let",     anorexia = "ano",     disrupt = "dis",
    confusion = "con",    stupidity = "stu",    generosity = "gen",
    hypochondria = "hyp",
  }]]

--CUSTOM SETS
if (matches[2] == "sg1" or matches[2] == "imp") then
  delayed_imp = false
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[MESMER]: &lt;LightCyan&gt;imp &lt;orange&gt;added to queue...")
elseif (matches[2] == "sg2" or matches[2] == "hyp") then
  delayed_imp = false
  hypnoout = "sugg imp hyp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[MESMER]: &lt;LightCyan&gt;imp hyp &lt;orange&gt;added to queue...")

--CLASS SETS
elseif (matches[2] == "dra" or matches[2] == "drg" or matches[2] == "dragon") then
  delayed_imp = false
  hypnoout = "sugg imp rec"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Dragon: &lt;LightCyan&gt;imp rec &lt;orange&gt;added to queue...")
elseif (matches[2] == "dep" or matches[2] == "dsw" or matches[2] == "depthswalker") then
  delayed_imp = false
  hypnoout = "sugg imp rec"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Depthswalker: &lt;LightCyan&gt;imp rec &lt;orange&gt;added to queue...")
elseif (matches[2] == "psi" or matches[2] == "psn" or matches[2] == "psion") then
  delayed_imp = false
  hypnoout = "sugg imp con"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Psion: &lt;LightCyan&gt;imp con&lt;orange&gt;added to queue...")
elseif (matches[2] == "alc" or matches[2] == "alm" or matches[2] == "alchemist") then
  delayed_imp = false
  hypnoout = "sugg imp stu"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Alchemist: &lt;LightCyan&gt;imp stu &lt;orange&gt;added to queue...")
elseif (matches[2] == "1" or matches[2] == "2" or matches[2] == "3" or matches[2] == "4" or matches[2] == "5" or matches[2] == "6" or matches[2] == "7" or matches[2] == "8" or matches[2] == "9" or matches[2] == "10") then
  hypnoout =""
  mesmer.sealTime = matches[2]
  print("Queue cleared for custom suggestions (sugga action1, action2).\nSeal time was set for: "..matches[2])
else
  if (tar_class == "dragon") then
    delayed_imp = false
    cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Dragon: &lt;LightCyan&gt;imp rec &lt;orange&gt;added to queue...")
    hypnoout = "sugg imp rec"
    mesmer.sealTime = 1
  elseif (tar_class == "depthswalker") then
    delayed_imp = false
    cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Depthswalker: &lt;LightCyan&gt;imp rec &lt;orange&gt;added to queue...")
    hypnoout = "sugg imp rec"
    mesmer.sealTime = 1
  elseif (tar_class == "alchemist") then
    delayed_imp = false
    cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Alchemist: &lt;LightCyan&gt;imp stu &lt;orange&gt;added to queue...")
    hypnoout = "sugg imp stu"
    mesmer.sealTime = 1
  elseif (tar_class == "psion") then
    delayed_imp = false
    cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Psion: &lt;LightCyan&gt;imp con &lt;orange&gt;added to queue...")
    hypnoout = "sugg imp con"
    mesmer.sealTime = 1
  else
    delayed_imp = false
    hypnoout = "sugg imp"
    mesmer.sealTime = 1
    cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;Default: &lt;LightCyan&gt;imp &lt;orange&gt;added to queue...")
  end
end
    
  
    </script>
					<command></command>
					<packageName></packageName>
					<regex>^qh ?(.+)?(\d+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ ms ] mesmer suggest</name>
					<script>--MESMER HYPNOSIS
if mesmer.status == "none" then
  mesmer.reset()
  expandAlias(hypnoout)
  mesmer.suggest()
elseif mesmer.status == "in progress" then
elseif mesmer.status == "hypnotised" then
  mesmer.suggest()
elseif mesmer.status == "snapped" then
  mesmer.reset()
  expandAlias(hypnoout)
  mesmer.suggest()
elseif mesmer.status == "sealed" then
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^ms$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>settings</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>[ vt ] venom table selection</name>
					<script>local vselect = matches[2]

--[[ VSTACK SELECTION ]]

--WEARINESS
if vselect == "w" then
  vstack = "wea"
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
--CLUMSINESS
elseif vselect == "c" then
  vstack = "clu"
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
--DARKSHADE
elseif vselect == "d" then
  vstack = "dark"
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;darkshade &lt;orange&gt;added to stack...")
--KELP
elseif vselect == "k" then
  vstack = "kelp"
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;kelp &lt;orange&gt;added to stack...")

--[[ TARGET CLASS/POST LOCK STACK ]]

--AIR ELEMENTAL
elseif (vselect == "air" or vselect == "aem" or vselect == "airelemental") then
  tar_class = "airelemental"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;air elemental &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")

--ALCHEMIST
elseif (vselect == "alc" or vselect == "alm" or vselect == "alt" or vselect == "alchemist") then
  tar_class = "alchemist"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;alchemist &lt;LightCyan&gt;(stupidity)&lt;orange&gt;...")

--APOSTATE
elseif (vselect == "apo" or vselect == "aps" or vselect == "apt" or vselect == "apostate") then
  tar_class = "apostate"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;apostate &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")

--BARD
elseif (vselect == "bar" or vselect == "brd" or vselect == "bard") then
  tar_class = "bard"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;bard &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")
  
--BLADEMASTER  
elseif (vselect == "blm" or vselect == "bla" or vselect == "bld" or vselect == "blademaster") then
  tar_class = "blademaster"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;blademaster &lt;LightCyan&gt;(weariness, paralysis, prone)&lt;orange&gt;...")

--DEPTHSWALKER
elseif (vselect == "dep" or vselect == "dsw" or vselect == "dps" or vselect == "depthswalker") then
  tar_class = "depthswalker"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;depthswalker &lt;LightCyan&gt;(recklessness)&lt;orange&gt;...")

--DRAGON
elseif (vselect == "drg" or vselect == "dra" or vselect == "dgn" or vselect == "dragon") then
  tar_class = "dragon"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;dragon &lt;LightCyan&gt;(weariness, recklessness)&lt;orange&gt;...")

--DRUID
elseif (vselect == "dru" or vselect == "drd" or vselect == "druid") then
  tar_class = "druid"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;green&gt;druid &lt;LightCyan&gt;(weariness, voyria)&lt;orange&gt;...")

--EARTH ELEMENTAL
elseif (vselect == "eem" or vselect == "ear" or vselect == "earthelemental") then
  tar_class = "earthelemental"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;earth elemental &lt;LightCyan&gt;(weariness) &lt;orange&gt;...")

--FIRE ELEMENTAL
elseif (vselect == "fem" or vselect == "fir" or vselect == "fireelemental") then
  tar_class = "fireelemental"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;fire elemental &lt;LightCyan&gt;(prone) &lt;orange&gt;...")
  
--INFERNAL
elseif (vselect == "inf" or vselect == "inr" or vselect == "ifr" or vselect == "infernal") then
  tar_class = "infernal"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;infernal &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")

--JESTER
elseif (vselect == "jes" or vselect == "jst" or vselect == "jsr" or vselect == "jester") then
  tar_class = "jester"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;jester &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")

--KNIGHT
elseif (vselect == "kni" or vselect == "knt" or vselect == "knight") then
  tar_class = "knight"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;knight &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")
  
--MAGI
elseif (vselect == "mag" or vselect == "mgi" or vselect == "magi") then
  tar_class = "magi"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;magi &lt;LightCyan&gt;(haemophilia)&lt;orange&gt;...")

--MONK
elseif (vselect == "mon" or vselect == "mnk" or vselect == "monk") then
  tar_class = "monk"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;monk &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")

--OCCULTIST
elseif (vselect == "occ" or vselect == "clt" or vselect == "occultist") then
  tar_class = "occultist"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;occultist &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")

--PALADIN
elseif (vselect == "pal" or vselect == "pld" or vselect == "pdn" or vselect == "paladin") then
  tar_class = "paladin"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;paladin &lt;LightCyan&gt;(weariness, voyria)&lt;orange&gt;...")
  
--PARIAH
elseif (vselect == "par" or vselect == "prh" or vselect == "pariah") then
  tar_class = "pariah"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;pariah &lt;LightCyan&gt;(voyria) &lt;orange&gt;...") 

--PRIEST
elseif (vselect == "pri" or vselect == "pst" or vselect == "prt" or vselect == "priest") then
  tar_class = "priest"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;priest &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")

--PSION
elseif (vselect == "psi" or vselect == "psn" or vselect == "psion") then
  tar_class = "psion"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;psion &lt;LightCyan&gt;(confusion) &lt;orange&gt;...")
  cecho("&lt;orange&gt;[MESMER]: &lt;green&gt;psion: &lt;LightCyan&gt;imp con &lt;orange&gt;added to queue...")
  hypnoout = "sugg imp con"
  mesmer.sealTime = 1

--RUNEWARDEN
elseif (vselect == "run" or vselect == "rwn" or vselect == "runewarden") then
  tar_class = "runewarden"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;runewarden &lt;LightCyan&gt;(weariness, voyria)&lt;orange&gt;...")
 
--SENTINEL
elseif (vselect == "sen" or vselect == "snt" or vselect == "sentinel") then
  tar_class = "sentinel"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;sentinel &lt;LightCyan&gt;(weariness) &lt;orange&gt;...")

--SERPENT
elseif (vselect == "ser" or vselect == "srp" or vselect == "spt" or vselect == "serpent") then
  tar_class = "serpent"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;serpent &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")

--SHAMAN
elseif (vselect == "sha" or vselect == "shm" or vselect == "shn" or vselect == "shaman") then
  tar_class = "shaman"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;shaman &lt;LightCyan&gt;(selarnia) &lt;orange&gt;...")

--SYLVAN
elseif (vselect == "syl" or vselect == "slv" or vselect == "sylvan") then
  tar_class = "sylvan"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;sylvan &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")

--UNNAMABLE
elseif (vselect == "unn" or vselect == "una" or vselect == "unm" or vselect == "unnamable") then
  tar_class = "unnamable"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;unnamable &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")

--WATER ELEMENTAL
elseif (vselect == "wat" or vselect == "wem" or vselect == "waterelemental") then
  tar_class = "waterelemental"
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;Water elemental &lt;LightCyan&gt;(weariness) &lt;orange&gt;...")

--NONE
elseif vselect == "none" then
  tar_class = "none"
  cecho("&lt;orange&gt;[VSTACK]: post-lock set to &lt;red&gt;none&lt;orange&gt;...")

--[[ ADDITIONAL OPTIONS ]]

--NO TREE
elseif (vselect == "nt" or vselect == "notree") then
  if no_tree then
    no_tree = false
    cecho("&lt;orange&gt;[VSTACK]: &lt;orange&gt;Autosnap &lt;green&gt;will &lt;orange&gt;now consider &lt;yellow&gt;tree &lt;orange&gt;downtime...")
  else
    no_tree = true
    cecho("&lt;orange&gt;[VSTACK]: &lt;orange&gt;Autosnap &lt;red&gt;won't &lt;orange&gt;consider &lt;yellow&gt;tree &lt;orange&gt;downtime...")
  end

--RESET
else
  vstack = "none"
  def_stack = false
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^vt ?(\w+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ af ] autoflay toggle</name>
					<script>if auto_flay then
  auto_flay = false
  boxDisplay("auto flay off...", "red:black")
else
  auto_flay = true
  boxDisplay("auto flay on...", "green:black")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^af$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ cs ] custom settings</name>
					<script>local customset = matches[2]

--AIR ELEMENTAL
if (customset == "air" or customset == "aem" or customset == "airelemental") then
  vstack = "none"
  tar_class = "airelemental"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;air elemental &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--ALCHEMIST
elseif (customset == "alc" or customset == "alm" or customset == "alt" or customset == "alchemist") then
  vstack = "none"
  tar_class = "alchemist"
  hypnoout = "sugg imp stu"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;alchemist &lt;LightCyan&gt;(stupidity) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp stu &lt;orange&gt;added to queue...")
  
--APOSTATE
elseif (customset == "apo" or customset == "aps" or customset == "apt" or customset == "apostate") then
  vstack = "clu"
  tar_class = "apostate"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;apostate &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--BARD
elseif (customset == "bar" or customset == "brd" or customset == "bard") then
  vstack = "clu"
  tar_class = "bard"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;bard &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--BLADEMASTER  
elseif (customset == "blm" or customset == "bla" or customset == "bld" or customset == "blademaster") then
  vstack = "wea"
  tar_class = "blademaster"
  send("weaving on")
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;blademaster &lt;LightCyan&gt;(weariness, paralysis, prone)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--DEPTHSWALKER
elseif (customset == "dep" or customset == "dsw" or customset == "dps" or customset == "depthswalker") then
  vstack = "clu"
  tar_class = "depthswalker"
  hypnoout = "sugg imp rec"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;depthswalker &lt;LightCyan&gt;(recklessness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp rec &lt;orange&gt;added to queue...")

--DRAGON
elseif (customset == "drg" or customset == "dra" or customset == "dgn" or customset == "dragon") then
  vstack = "wea"
  tar_class = "dragon"
  hypnoout = "sugg imp rec"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;dragon &lt;LightCyan&gt;(weariness, recklessness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;Dragon: imp rec &lt;orange&gt;added to queue...")

--DRUID
elseif (customset == "dru" or customset == "drd" or customset == "druid") then
  vstack = "wea"
  tar_class = "druid"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;druid &lt;LightCyan&gt;(weariness, voyria) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--EARTH ELEMENTAL
elseif (customset == "eem" or customset == "ear" or customset == "earthelemental") then
  vstack = "wea"
  tar_class = "earthelemental"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;earth elemental &lt;LightCyan&gt;(weariness) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--FIRE ELEMENTAL
elseif (customset == "fem" or customset == "fir" or customset == "fireelemental") then
  vstack = "none"
  tar_class = "fireelemental"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;fire elemental &lt;LightCyan&gt;(prone) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--INFERNAL
elseif (customset == "inf" or customset == "inr" or customset == "ifr" or customset == "infernal") then
  vstack = "wea"
  tar_class = "infernal"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;infernal &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--JESTER
elseif (customset == "jes" or customset == "jst" or customset == "jsr" or customset == "jester") then
  vstack = "clu"
  tar_class = "jester"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;jester &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  cecho("&lt;orange&gt;\n[SVOF]: &lt;green&gt;jester &lt;orange&gt;aff prios loaded...")
  
--KNIGHT
elseif (customset == "kni" or customset == "knt" or customset == "knight") then
  vstack = "wea"
  tar_class = "knight"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;knight &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--MAGI
elseif (customset == "mag" or customset == "mgi" or customset == "magi") then
  vstack = "none"
  tar_class = "magi"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  sendAll("wield "..myDirk.." "..myWhip) --wielding dirk/whip for aeon
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;magi &lt;LightCyan&gt;(haemophilia)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--MONK
elseif (customset == "mon" or customset == "mnk" or customset == "monk") then
  vstack = "wea"
  tar_class = "monk"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;monk &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--OCCULTIST
elseif (customset == "occ" or customset == "clt" or customset == "occultist") then
  vstack = "none"
  tar_class = "occultist"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;occultist &lt;LightCyan&gt;(voyria)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--PALADIN
elseif (customset == "pal" or customset == "pld" or customset == "pdn" or customset == "paladin") then
  vstack = "clu"
  tar_class = "paladin"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;paladin &lt;LightCyan&gt;(weariness, voyria)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--PARIAH
elseif (customset == "par" or customset == "prh" or customset == "pariah") then
  vstack = "none"
  tar_class = "pariah"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;pariah &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--PRIEST
elseif (customset == "pri" or customset == "pst" or customset == "prt" or customset == "priest") then
  vstack = "weaclu"
  tar_class = "priest"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness / clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;priest &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--PSION
elseif (customset == "psi" or customset == "psn" or customset == "psion") then
  vstack = "clu"
  tar_class = "psion"
  hypnoout = "sugg imp con"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;clumsiness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;psion &lt;LightCyan&gt;(confusion) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp con &lt;orange&gt;added to queue...")
  
--RUNEWARDEN
elseif (customset == "run" or customset == "rwn" or customset == "runewarden") then
  vstack = "wea"
  tar_class = "runewarden"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;runewarden &lt;LightCyan&gt;(weariness, voyria)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--SENTINEL
elseif (customset == "sen" or customset == "snt" or customset == "sentinel") then
  vstack = "wea"
  tar_class = "sentinel"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;sentinel &lt;LightCyan&gt;(weariness) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
--SERPENT
elseif (customset == "ser" or customset == "srp" or customset == "spt" or customset == "serpent") then
  vstack = "wea"
  tar_class = "serpent"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;serpent &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--SHAMAN
elseif (customset == "sha" or customset == "shm" or customset == "shn" or customset == "shaman") then
  vstack = "none"
  tar_class = "shaman"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;shaman &lt;LightCyan&gt;(selarnia) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--SYLVAN
elseif (customset == "syl" or customset == "slv" or customset == "sylvan") then
  vstack = "none"
  tar_class = "sylvan"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;sylvan &lt;LightCyan&gt;(voyria) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--UNNAMABLE
elseif (customset == "unn" or customset == "una" or customset == "unm" or customset == "unnamable") then
  vstack = "wea"
  tar_class = "unnamable"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;unnamable &lt;LightCyan&gt;(weariness)&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")

--WATER ELEMENTAL
elseif (customset == "wat" or customset == "wem" or customset == "waterelemental") then
  vstack = "wea"
  tar_class = "waterelemental"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;[VSTACK]: &lt;green&gt;weariness &lt;orange&gt;added to stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;green&gt;Water elemental &lt;LightCyan&gt;(weariness) &lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
  
else
  vstack = "none"
  tar_class = "none"
  hypnoout = "sugg imp"
  mesmer.sealTime = 1
  cecho("&lt;orange&gt;\n[VSTACK]: &lt;red&gt;removed &lt;orange&gt;all venom selections from stack...")
  cecho("&lt;orange&gt;\n[VSTACK]: post-lock set to &lt;red&gt;none&lt;orange&gt;...")
  cecho("&lt;orange&gt;\n[MESMER]: &lt;green&gt;imp &lt;orange&gt;added to queue...")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^cs ?(\w+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ as ] autosnap toggle</name>
					<script>if auto_snap then
  auto_snap = false
  boxDisplay("auto snap off...", "red:black")
else
  auto_snap = true
  boxDisplay("auto snap on...", "green:black")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^as$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ pl ] party leader</name>
					<script>if PartyLeader then
  PartyLeader = false
  boxDisplay("Not announcing targets...", "red:black")
else
  PartyLeader = true
  boxDisplay("Announcing targets to party...", "green:black")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^pl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ pc ] party target calls</name>
					<script>if PartyCalls then
  PartyCalls = false
  boxDisplay("Not targeting party calls...", "red:black")
else
  PartyCalls = true
  boxDisplay("Targeting party calls...", "green:black")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^pc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ pa ] party aff announcing</name>
					<script>if EchoToParty then
  EchoToParty = false
  boxDisplay("Not announcing affs...", "red:black")
else
  EchoToParty = true
  boxDisplay("Announcing affs to party...", "green:black")
end

</script>
					<command></command>
					<packageName></packageName>
					<regex>^pa$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[ nh ] no hypnosis toggle</name>
					<script>if no_hyp then
  no_hyp = nil
  boxDisplay("hypnosis on...", "green:black")
else
  no_hyp = true
  boxDisplay("hypnosis off...", "red:black")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^nh$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>AK Opponent Tracking</name>
				<script></script>
				<command></command>
				<packageName>AK Opponent Tracking</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Ak Opponent Curing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>^t (.+)$</name>
						<script>target = matches[2] 
ak.highlighttarget = ak.highlighttarget or true --Change This To False if Errors
if ak.highlighttarget == true then
   if idtwo then killTrigger(idtwo) end
   idtwo = tempTrigger(target, [[selectString("]] .. target .. [[", 1) fg("red") resetFormat()]])
   target = target:title()
   if id then killTrigger(id) end
   id = tempTrigger(target, [[selectString("]] .. target .. [[", 1) fg("red") resetFormat()]])
else 
   target = target:title()
end
if ak.stack and ak.stack == "none" then ak.classenable() end
echo("\n")
cecho("&lt;cyan&gt; Target Changed to "..target)
echo("\n")
echo("\n")
ak.oresetparse()



--If your targetting errors, try setting ak.highlighttarget to false</script>
						<command></command>
						<packageName></packageName>
						<regex>^t (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^ora$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattackra")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ora$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^ola$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattackla")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ola$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^orl$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattackrl")</script>
						<command></command>
						<packageName></packageName>
						<regex>^orl$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^oll$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattackll")</script>
						<command></command>
						<packageName></packageName>
						<regex>^oll$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^odst$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattack")</script>
						<command></command>
						<packageName></packageName>
						<regex>^odst$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^oah$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattackh")</script>
						<command></command>
						<packageName></packageName>
						<regex>^oah$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^oat$</name>
						<script>send("clearqueue all")
send("queue add eqbal oattackt")</script>
						<command></command>
						<packageName></packageName>
						<regex>^oat$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mesmer</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Queue Action</name>
					<script>local actions = string.split(matches[2], ', ')
for _, action in ipairs(actions) do
  mesmer.queue("action", action)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^sugga(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Queue Affliction</name>
					<script>--^sugg(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?$
--display(matches[2])
mesmer.queue(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^sugg(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Reset</name>
					<script>mesmer.reset()</script>
					<command></command>
					<packageName></packageName>
					<regex>^hrta$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Report a bug</name>
					<script>send("msg isaiah //mesmer("..mesmer.myVersion..") Bug: " .. matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^mesmer bug (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Submit an idea</name>
					<script>send("msg isaiah //mesmer("..mesmer.myVersion..") Idea: " .. matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^mesmer idea (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Commands</name>
					<script>mesmer.echon("&lt;white&gt;queue commands&lt;light_pink&gt;:")
mesmer.echon("   '&lt;white&gt;sugg &lt;aff/set&gt;&lt;light_pink&gt;' - Adds afflictions or affliction sets to your hypnosis queue.") 
mesmer.echon("                     '&lt;white&gt;sugg imp con dis&lt;light_pink&gt;' will queue impatience, confusion, and disruption.")
mesmer.echon("                      All queued items present in the order in which they are queued.") 
mesmer.echon("                      In this example the target recieve impatience, confusion, then")
mesmer.echon("                      disruption.")   
mesmer.echon("                      '&lt;white&gt;sugg c1&lt;light_pink&gt;' will also queue impatience, confusion, and disruption")
mesmer.echon("                      because this set has been setup in &lt;white&gt;mesmer.ref.set&lt;gray&gt;: see script for")
mesmer.echon("                      &lt;gray&gt;more details&lt;light_pink&gt;.")
mesmer.echon("                      '&lt;white&gt;sugg&lt;light_pink&gt;', without any input will reset the queue but not the target.") 
mesmer.echon("                      this allows for you to setup your next hypno chain without")
mesmer.echon("                      disrupting anything.")   
mesmer.echon("   '&lt;white&gt;sugga &lt;action&gt;&lt;light_pink&gt;' - Adds an action to your hypnosis queue.") 
mesmer.echon("                      '&lt;white&gt;sugga get gold from pack&lt;light_pink&gt;' will queue that action.")
mesmer.echon("                      '&lt;white&gt;sugga&lt;light_pink&gt;', without any input will hard reset the queue.") 
mesmer.echon("             '&lt;white&gt;hrta&lt;light_pink&gt;' - Also HARD resets all hypnosis data - should be used only if")
mesmer.echon("                      everything is screwed.")
mesmer.echon("&lt;white&gt;mesmer commands&lt;light_pink&gt;:")
mesmer.echon("      '&lt;white&gt;mesmer bug &lt;msg&gt;&lt;light_pink&gt;' - submits a message about a bug, please be detailed.") 
mesmer.echon("     '&lt;white&gt;mesmer idea &lt;msg&gt;&lt;light_pink&gt;' - submits an idea to make this better.")   
mesmer.echon("'&lt;white&gt;mesmer donate &lt;amount&gt;&lt;light_pink&gt;' - &lt;dim_gray&gt;(&lt;red&gt;optional&lt;dim_gray&gt;) &lt;light_pink&gt;donations to keep this fully supported and updated.")  

   
</script>
					<command></command>
					<packageName></packageName>
					<regex>^mesmer$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Donations</name>
					<script>send("transfer "..matches[2].." credits to Isaiah for 0 gold", false)
mesmer.echo("You have donated &lt;white&gt;"..matches[2].." &lt;light_pink&gt;credit(s)! Thank you!")</script>
					<command></command>
					<packageName></packageName>
					<regex>^mesmer donate (\d+)$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
</MudletPackage>
